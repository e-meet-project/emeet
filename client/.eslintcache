[{"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/index.js":"1","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/App.js":"2","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/Homepage.js":"3","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/navbar/Navbar.js":"4","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Events.js":"5","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Editevent.js":"6","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Addevent.js":"7","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/auth/Signup.js":"8","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/user/UserProfile.js":"9","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/auth/Login.js":"10","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/EventDetail.js":"11","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/EventList.js":"12","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/FilteredEvents.js":"13","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/Searchbar.js":"14","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/services/auth.js":"15","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/EventRow.js":"16","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/services/upload.js":"17"},{"size":1110,"mtime":1608126161513,"results":"18","hashOfConfig":"19"},{"size":4332,"mtime":1608243978464,"results":"20","hashOfConfig":"19"},{"size":6521,"mtime":1608243523797,"results":"21","hashOfConfig":"19"},{"size":1708,"mtime":1608243523757,"results":"22","hashOfConfig":"19"},{"size":1653,"mtime":1608243523755,"results":"23","hashOfConfig":"19"},{"size":5093,"mtime":1608243515211,"results":"24","hashOfConfig":"19"},{"size":9283,"mtime":1608243515210,"results":"25","hashOfConfig":"19"},{"size":6031,"mtime":1608247897153,"results":"26","hashOfConfig":"19"},{"size":2708,"mtime":1608243523759,"results":"27","hashOfConfig":"19"},{"size":2794,"mtime":1608161032865,"results":"28","hashOfConfig":"19"},{"size":10869,"mtime":1608243645651,"results":"29","hashOfConfig":"19"},{"size":1096,"mtime":1608126180030,"results":"30","hashOfConfig":"19"},{"size":2424,"mtime":1608243523756,"results":"31","hashOfConfig":"19"},{"size":963,"mtime":1608243523756,"results":"32","hashOfConfig":"19"},{"size":882,"mtime":1608247926916,"results":"33","hashOfConfig":"19"},{"size":1807,"mtime":1608243523755,"results":"34","hashOfConfig":"19"},{"size":453,"mtime":1608243515232,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"7ph9z0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/index.js",[],["78","79"],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/App.js",["80","81"],"// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport { Route , Switch , Redirect, BrowserRouter } from \"react-router-dom\"\n\n// import Index from './components/Index';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Navbar from './components/navbar/Navbar';\nimport Events from './components/events/Events';\nimport UserProfile from './components/user/UserProfile';\nimport Homepage from './components/Homepage';\nimport EventDetail from './components/events/EventDetail';\nimport Editevent from './components/events/Editevent';\nimport Addevent from './components/events/Addevent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Image} from 'cloudinary-react';\n\n\nclass App extends Component {\n\n  //auth added dec 11@11AM\n  state = {\n    user: this.props.user\n  }\n\n  setUser = user => {\n    this.setState({\n      user: user\n    })\n  }\n\n  //=========================\n\n  render() {\n    // console.log(`App.js user`, this.state.user)\n    return (\n      <div>\n        <Navbar user={this.state.user} setUser={this.setUser} />\n\n          <Switch>\n\n          {/* <Route exact path = \"/\" component = {Homepage } />\n          {/* <Route exact path = \"/signup\" component = { Signup } /> */}\n          {/* <Route exact path = \"/login\" component = { Login } /> */}\n          {/* <Route exact path = \"/events\" component = { Events } />\n          <Route exact path = \"/profile\" component = { UserProfile } /> */} \n          {/* <Route exact path = \"/events\" component = { Events } /> */}\n          {/* <Route exact path = \"/profile\" component = { UserProfile } /> */}\n          {/* <Route exact path = \"/editevent\" component = { Editevent }/> */}\n          {/* <Route exact path = \"/Addevent\" component = {Addevent} /> */}\n         \n          \n            <Route exact path = \"/\" \n              render= { props => {\n                  if (this.state.user) {\n                    return <Homepage \n                      user = {this.state.user}\n                      {...props}\n                    />\n                  }\n                  else {\n                    return <Homepage /> \n                    }\n                  // component = { UserProfile } /> // replaced by render\n                  }}\n            />\n            \n\n            <Route exact path = \"/signup\" \n              render = { props => \n               <Signup setUser={this.setUser} {...props} />}\n            />\n            <Route exact path = \"/login\" \n              render={ props => \n              <Login setUser={this.setUser} {...props}/>}\n                // component = { Login } /> //replaced by render\n                // render={props => <Login setUser={this.setUser} {...props} />}\n            />\n            <Route exact path = \"/events\" \n              render={(props) => \n              <Events setUser={this.setUser} {...props}/>}\n                // component = { Login } /> //replaced by render\n            />\n            \n            {/* <Route exact path = \"/events\" component = { Events } /> */}\n\n            <Route exact path = \"/profile\" \n              render= { props => {\n                  if (this.state.user) {\n                    return <UserProfile \n                      user = {this.state.user}\n                      {...props}\n                    />\n                  }\n                  else {return <Redirect to= '/' /> }\n                  // component = { UserProfile } /> // replaced by render\n                  }}\n            />\n\n            <Route exact path = \"/events/:id\" \n              render = { props => \n                <EventDetail\n               user={this.state.user} \n                {...props} \n                />}\n            />\n\n              \n\n\n            <Route exact path = \"/editevent\" component = { Editevent }/>\n\n            <Route exact path = \"/addevent\" \n              // component = {Addevent} />\n              render= { props => {\n                  if (this.state.user) {\n                    return <Addevent \n                      user = {this.state.user}\n                      {...props}\n                    />\n                  \n                  }\n                  else {return <Redirect to= '/login' /> }\n              }}\n            /> \n\n\n          </Switch>\n\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n\n\n\n  \n","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/Homepage.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/navbar/Navbar.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Events.js",["82","83"],"import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport EventList from './Search/EventList'\nimport Searchbar from './Search/Searchbar';\nimport FilteredEvents from './Search/FilteredEvents'\nimport './Search/search.css'\n\n\n\nexport default class Events extends Component {\n\n  state = {\n    events: []\n  }\n\n  componentDidMount() {\n    axios.get('/api/events') \n      .then( response => {\n        console.log( `api call`, response)\n        this.setState({\n          events: response.data\n        })\n      })\n  }\n\n  render() {\n    // console.log(`event page`)\n    // console.log(response)\n    return (\n       \n      <div className=\"filteredResults\">\n\n      <div className=\"eventHeader\">\n        <h2>Find your next Emeet </h2>\n             {/* <div className=\"searchBar\"> */}\n  \n             {/* <h2>Find your next Emeet Event</h2> */}\n           \n          <div className=\"allEvents\"> \n            <div>\n              <Link className=\"allEventsButton\" \n                // style={ { color: \"#18191a\", backgroundColor: \"#99e1d9\"} } \n                // margin: \"0.5rem\", color:\"#5d576b\"\n                to=\"/Addevent\">\n               Or create your own!\n              </Link>\n            </div>\n  \n          </div>\n      </div>\n\n        {/* <EventList eventList={this.state.events} /> */}\n\n        <div className=\"container\">\n          <FilteredEvents\n                events = {this.state.events}\n          />\n        </div>\n        \n\n\n\n      </div>\n\n\n     \n    )\n  }\n\n}\n       \n// {/* <Searchbar \n//       filter = {this.filterEvents}\n//       search = {this.state.search}\n//     />\n//   </div>\n//      */}","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Editevent.js",["84"],"import React, { Component } from 'react'\nimport '../../components/auth/auth.css'\nimport { Form, Button, Alert, Container, Row, Col } from 'react-bootstrap';\n// import service from \"../../services/upload\";\n\nexport default class Editevent extends Component {\n  \n\n  render() {\n    return (\n      \n      <div class=\"centerAuth\">\n\n        <Container>\n        \n            <div class=\"boxOn\">\n              <h2> Edit your event </h2>\n\n              <Form onSubmit={this.props.handleSubmit}>\n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"title\"> Event title: </Form.Label>\n                  <Form.Control  \n                      type=\"text\" \n                      name=\"title\" \n                      id=\"title\" \n                    \n                      value={this.props.title} \n                      onChange={this.props.handleChange}  \n                    />\n                </Form.Group>\n\n \n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"date\">Event date:</Form.Label>\n                    <Form.Control \n                      type=\"date\" \n                      name=\"date\" \n                      id=\"date\" \n                      value={this.props.date}\n                      onChange={this.props.handleChange}\n                        \n                      />\n                </Form.Group>\n\n                <Row>\n                    <Col>\n                      <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"startTime \"> Start time: </Form.Label>\n                          <Form.Control \n                            type= \"time\" \n                            name=\"startTime\" \n                            id=\"startTime\" \n                            value={this.props.startTime}  \n                            onChange={this.props.handleChange}\n                          />\n                      </Form.Group>\n  \n                    </Col>\n                    <Col></Col>\n                    <Col></Col>\n                    </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"endTime\" > End time: </Form.Label>\n                        <Form.Control \n                          type=\"time\"\n                          name=\"endTime\"\n                          id=\"endTime\"\n                          value={this.props.endTime}\n                          onChange={this.props.handleChange}\n                          />\n                    </Form.Group>\n                  </Col>\n                  <Col></Col>\n                  <Col></Col>\n                </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"maxCapacity\"> Maximum capacity: </Form.Label>\n                          <Form.Control \n                            type=\"number\"\n                            name=\"maxCapacity\" \n                            id=\"maxCapacity\"\n                            value={this.props.maxCapacity}\n                            onChange={this.props.handleChange}\n                          />\n                        </Form.Group>\n                  </Col>\n                  <Col></Col>\n                  <Col></Col>\n                </Row>\n\n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                    <Form.Control as=\"textarea\" rows={3}\n                      type=\"text\"\n                      height=\"20px\"\n                      name=\"description\"\n                      id=\"description\"\n                      value={this.props.description}\n                      onChange={this.props.handleChange}\n                    />\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"googleLink\">Add Google link: </Form.Label>\n                    <Form.Control \n                      type=\"link\"\n                      name=\"googleLink\"\n                      id=\"googleLink\"\n                      value={this.props.googleLink}\n                      onChange={this.props.handleChange}\n                      />\n                </Form.Group>\n\n                <div className=\"profileImageUpload\">\n                  <Form.Group >\n                      <Form.Label hmtlFor=\"image\" >Upload an image: </Form.Label>\n                        <div class=\"profileImageUploadContainer\">\n                            <Form.Control \n                              type=\"file\"\n                              name=\"image\"\n                              id=\"image\"\n                              onChange={this.handleFileUpload}\n                                // class=\"profileImageUpload\"\n                            />\n                          </div>\n                  </Form.Group>      \n                </div>\n                  <br />\n                  <Button type='submit'> \n                    Edit your event \n                  </Button>\n                \n              </Form>\n            </div>\n        </Container>\n      </div>\n    );\n  }\n}\n    \n  \n\n\n\n\n","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Addevent.js",["85"],"import React, { Component } from 'react'\nimport axios from \"axios\";\nimport './eventLists.css'\nimport '../../components/auth/auth.css'\nimport { Form, Button, Alert, Container, Row, Col } from 'react-bootstrap';\nimport service from \"../../services/upload\";\n\n\n\n// userProfileData\nexport default class Addevent extends Component {\n  state = {\n    title: '',\n    date:'',\n    startTime: '',\n    endTime: '',\n    maxCapacity:'',\n    // attendees: '',\n    // owner: '',\n    description: '',\n    image:'',\n    imagePublicID: \"\",\n    googleLink:'',\n    message: '',\n    submitted: false,\n    imageSelected: false,\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target;\n    \n    console.log(value);\n    this.setState ({\n      [name]: value\n    });\n  };\n\n  handleFileUpload = e => {\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\n    this.setState({\n      imageSelected: true\n    });\n    const uploadData = new FormData();\n    uploadData.append(\"image\", e.target.files[0]);\n    console.log(\"THIS IS THE UPLOAD DATA\", uploadData)\n    service.handleUpload(uploadData)\n      .then(response => {\n        console.log(response)\n        const image = response.secure_url;\n        const publicID = response.public_id;\n        console.log('res from handleupload: ', response.secure_url);\n        this.setState({ image: image, imagePublicID: publicID });\n        console.log('new state: ', this.state.image);\n        // check if the form already got submitted and only waits for the image upload\n        if (this.state.submitted === true) {\n          this.handleSubmit();\n        }\n      })\n      .catch(err => {\n        this.setState({\n          imageSelected: false\n        });\n        console.log(\"Error while uploading the file: \", err);\n      });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault ();\n\n    console.log(\"submit\");\n      \n    const { title, date, startTime,endTime, description, image, publicID, googleLink} = this.state;\n    \n\n    console.log(this.state)\n  \n    // userProfileData(event).then (data => {\n    //   if (data.message) {\n    //     this.setState({\n    //       message: data.message,\n    //     })\n    //   }\n    // });\n\n    // if (title.length <5 ) {\n    //     this.setState ({ \n    //     message: 'Please enter a longer title'\n    //   })\n    // }\n\n    if (this.state.image || !this.state.imageSelected){\n      console.log(image)\n    axios.post(\"/api/events\", {    \n      title:title,\n      date:date,\n      startTime: startTime,\n      endTime:endTime,\n      owner: this.props.user._id,\n      description: description,\n      image:image,\n      imagePublicID: publicID,\n      googleLink: googleLink,\n    })\n      .then( (event) => {\n        console.log(event.data , \"fetch event\")\n        this.props.refreshData();\n        this.setState({\n          message:`Event created!`\n        })\n      }).catch( err => {\n        console.log(err);\n     })\n    } else {\n      this.setState({\n        submitted: true\n      })\n    }\n    this.props.history.push(\"/events\");\n    // this.props.history.push(`/events/${this.props.events._id}`);\n      \n  }; //handleSubmit end\n\n  // userProfileData (something).then (data => {\n  //   if (data.message) {\n  //     this.setState({\n  //       message: data.message,\n  //     });\n  \n  \n  \n\n  render() {\n    console.log(this.props)\n    console.log(`message`, this.state.message)\n    return (\n       <div class=\"centerAuth\">\n            \n            <Container>\n              <div class=\"boxOn\">\n                <h1>Create an Event</h1>\n                <p className=\"error\">\n                  Message: {this.state.message}\n                </p>\n    \n                <div> \n               \n                  <Form onSubmit={this.handleSubmit}> \n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"title\"> Event title: </Form.Label>\n                          <Form.Control \n                            type=\"text\" \n                            name=\"title\" \n                            id=\"title\" \n                            // placeholder=\"Event Title\"\n                            value={this.state.title} \n                            onChange={this.handleChange}\n                            // size=\"lg\"\n                          />\n                    </Form.Group>      \n\n                    <Form.Group as={Row}>\n                      <Form.Label htmlFor=\"date\">Event date:</Form.Label>\n                        <Form.Control \n                            type=\"date\" \n                            name=\"date\" \n                            id=\"date\" \n                            // placeholder=\"Date of event\"\n                            value={this.state.date}\n                            onChange={this.handleChange}\n                              \n                          />\n                    </Form.Group>\n\n                    <Row>\n                      <Col>\n                        <Form.Group as={Row}>\n                          <Form.Label htmlFor=\"startTime \"> Start time: </Form.Label>\n                            <Form.Control \n                              type= \"time\" \n                              name=\"startTime\" \n                              id=\"startTime\" \n                              value={this.state.startTime}  \n                              onChange={this.handleChange}\n                            />\n                        </Form.Group>\n    \n                      </Col>\n                      <Col></Col>\n                      <Col></Col>\n                      </Row>\n\n                      <Row>\n                      <Col>\n                        <Form.Group as={Row}>\n                            <Form.Label htmlFor=\"endTime\" > End time: </Form.Label>\n                            <Form.Control \n                              type=\"time\"\n                              name=\"endTime\"\n                              id=\"endTime\"\n                              value={this.state.endTime}\n                              onChange={this.handleChange}\n                              />\n                        </Form.Group>\n                      </Col>\n                      <Col></Col>\n                      <Col></Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                      \t<Form.Group as={Row}>\n                      \t    <Form.Label htmlFor=\"maxCapacity\"> Maximum capacity: </Form.Label>\n                      \t      <Form.Control \n                      \t        type=\"number\"\n                      \t        name=\"maxCapacity\" \n                      \t        id=\"maxCapacity\"\n                      \t        value={this.state.maxCapacity}\n                      \t        onChange={this.handleChange}\n                      \t      />\n                      \t    </Form.Group>\n                      </Col>\n                      <Col></Col>\n                      <Col></Col>\n                    </Row>\n\n                        {/* <label htmlFor=\"owner\">Hosted by:  </label>\n                        <input \n                        type=\"text\" \n                        name=\"owner\" \n                        id=\"owner\"\n                        value={this.state.owner}\n                        onChange={this.handleChange}/>\n                        <br/> */}\n\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                          <Form.Control as=\"textarea\" rows={3}\n                            type=\"text\"\n                            height=\"20px\"\n                            name=\"description\"\n                            id=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                          />\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"googleLink\">Add Google link: </Form.Label>\n                          <Form.Control \n                            type=\"link\"\n                            name=\"googleLink\"\n                            id=\"googleLink\"\n                            value={this.state.googleLink}\n                            onChange={this.handleChange} \n                            />\n                    </Form.Group>\n\n                    <div className=\"profileImageUpload\">\n                      <Form.Group >\n                          <Form.Label hmtlFor=\"image\" >Upload an image: </Form.Label>\n                          <div class=\"profileImageUploadContainer\">\n                              <Form.Control \n                                type=\"file\"\n                                name=\"image\"\n                                id=\"image\"\n                                onChange={this.handleFileUpload}\n                                // class=\"profileImageUpload\"\n                              />\n                            </div>\n                      </Form.Group>      \n                    </div>\n                          <br />\n                          <Button type='submit'> \n                            Add your event! \n                          </Button>\n                      \n                  </Form>\n                </div>\n              </div>\n            </Container>\n      </div>\n    );\n  }\n}\n    \n  \n\n\n\n","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/auth/Signup.js",["86","87"],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/user/UserProfile.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/auth/Login.js",["88"],"// import { Alert } from 'bootstrap';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { login } from '../../services/auth';\nimport './auth.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form, Button, Alert, Container } from 'react-bootstrap';\n\n\nexport default class Login extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    // console.log (`state before  `, this.state)\n\n    login ( username , password ).then ( data => {\n      console.log(`login data`, data)\n\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: ''\n        });\n\n      } else {\n        // successfully logged in\n        // update the state for the parent component\n        console.log(`before the setUser`)\n        console.log(this.props)\n        this.props.setUser(data);\n        console.log(`after the setUser`)\n        this.props.history.push('/');\n      }\n    });\n  };\n\n\n  render (){\n    return (\n      <div class=\"centerAuth\">\n\n        <Container>\n          <div class=\"boxOn\">\n            <div>\n              <h1>\n                Please log in\n              </h1>\n      \n          \n              <p className=\"error\">\n                {this.state.message}\n              </p>\n            </div>\n    \n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Label htmlFor='username'>Username: </Form.Label>\n                <Form.Control \n                  size=\"lg\"\n                  type = \"text\"\n                  name = \"username\"\n                  id = \"username\"\n                  value = {this.state.username}\n                  onChange = {this.handleChange}\n                />\n              </Form.Group>\n    \n              <Form.Group>\n                <Form.Label htmlFor=\"password\">Password </Form.Label>\n                    <Form.Control \n                        size=\"lg\"\n                        type = \"password\"\n                        name = \"password\"\n                        id = \"password\"\n                        value = {this.state.password}\n                        onChange = {this.handleChange}\n                    />  \n                </Form.Group>\n    \n                <Button variant=\"primary\" type='submit'>Login</Button>\n    \n            </Form>\n            <div className=\"signupLoginSwitch\">\n              Need to create an account?  <Link to = \"/signup\">Sign up</Link>\n            </div>\n            </div>\n        </Container>\n    \n      </div>\n    )\n  }\n}\n","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/EventDetail.js",["89","90","91","92","93"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Addevent from './Addevent';\nimport Editevent from './Editevent';\nimport './eventLists.css'\n\nimport { Form, Button, Alert, Container, Dropdown } from 'react-bootstrap';\n\nexport default class EventDetail extends Component {\n\n  state = {\n    error: null,\n    event: null,\n    title: '',\n    description: '',\n    // owner: { type: Schema.Types.ObjectId, ref: 'User'},\n    image: '',\n    googleLink: '',\n    // attendees: [{ type: Schema.Types.ObjectId, ref: 'Event' }],\n    date: '',\n    startTime: \"\",\n    endTime: \"\",\n    maxCapacity:\"\",\n    attending: false,\n  }\n\n  getEventDetails = () => {\n    // console.log(`getEventDetails:`, this.props)\n    const eventId = this.props.match.params.id\n\n    axios.get(`/api/events/${eventId}`)\n        .then(response => {\n            const event = response.data;\n            // console.log(`axios call:`, event)\n            this.setState({\n              event : event,\n              title: response.data.title,\n              description: response.data.description,\n              image: response.data.image,\n              googleLink: response.data.googleLink,\n              date: response.data.date,\n              startTime: response.data.startTime,\n              endTime: response.data.endTime,\n              maxCapacity: response.data.maxCapacity,\n              // attending: response.data.attendees.includes(this.props.user._id)\n            })\n\n            if (response.data.attendees.includes(this.props.user._id) ) {\n              console.log('success')\n              this.setState({\n                attending: true\n              })\n            } else {\n              console.log('fail', this.props.user._id)\n              // console.log(response.data.attendees)\n              // console.log.log( `props`, this.props.user._id)\n            }\n          \n\n          })\n          .catch(err => {\n            console.log(err.response)\n            // if (err.response.status === 404) {\n            //   this.setState({\n            //     error: 'Sorry - Project Not found 🤷‍♀️ 🤷‍♂️'\n              // })\n            // }\n           \n          })\n         \n  }\n\n  componentDidMount() {\n    this.getEventDetails();\n\n  }\n\n  deleteEvent = () => {\n    // delete this project from the database\n    const id = this.props.match.params.id;\n    axios.delete(`/api/events/${id}`)\n      .then(() => {\n        // this is how you do a redirect with react router dom\n        this.props.history.push('/profile');\n      })\n  }\n\n  toggleEditForm = () => {\n    this.setState((prevState) => ({\n      editForm: !prevState.editForm\n    }))\n    \n  \n    }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n  //   console.log('current props:', this.props.match.params.id)\n  //   console.log('previous props:', prevProps.match.params.id)\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.getEventDetails();\n      // console.log(`compDU ${this.state.event}`)\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = this.props.match.params.id;\n    axios.put(`/api/events/${id}`, {\n      title: this.state.title,\n      description: this.state.description,\n      image: this.state.image,\n      googleLink: this.state.googleLink,\n      date: this.state.date,\n      startTime: this.state.startTime,\n      endTime: this.state.endTime,\n      maxCapacity: this.state.maxCapacity,\n\n    })\n      .then(response => {\n        this.setState({\n          event: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          image: response.data.image,\n          googleLink: response.data.googleLink,\n          date: response.data.date,\n          maxCapacity:response.data.maxCapacity,\n          startTime: response.data.startTime,\n          endTime: response.data.endTime,\n          editForm: false\n        })\n        this.props.history.push(\"/profile\");\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  joinEvent = () => {\n    const id = this.props.match.params.id;\n    axios.put(`/api/events/join/${id}`)\n    .then(response => {\n      console.log(response, \"response\");\n      this.setState({\n        attending: !this.state.attending\n      })\n    }).catch(err => console.log(err))\n  }\n\n\n  render() {\n    // console.log( `render user` , this.state.attending)\n    // console.log(this.state.event.attendees._id)\n    console.log(`renderid`, this.props.user._id)\n\n    // console.log(\"attending\", this.state.attending)\n    // console.log( `user?`, this.props.user._id)\n  //   if (this.state.error) return <h1>{this.state.error}</h1>\n     if (this.state.error) return <h1>{this.state.error}</h1>\n    if (!this.state.event) return <h1 class=\"detailsHeader\">Loading...</h1>\n   \n   \n    \n    // console.log(`event details!`)\n    // this.getEventDetails();\n    // console.log(`render's this.state`, this.state)\n\n    return (\n      <div className=\"detailsBody\">\n     \n        <div className =\"detailsHeader\">\n          <div className=\"detailsTitle\">\n            <h1>{this.state.event.title}</h1>\n          </div>\n\n          \n  \n          {/* <p>Start {this.state.event.startTime}  End {this.state.event.endTime}</p> */}\n  \n          <div className=\"detailsDateTime\">\n          \t{this.state.event.startTime \n          \t  ? <div>\n                <p><b>Start Time: </b>{this.state.event.startTime} \n                <br/><b>End Time : </b> {this.state.event.endTime} </p>\n              </div>\n              : <p> <b>Start & End Time:</b> TBD </p>\n          \t}\n            \n          \t{/* <p>Date: {this.state.event.date}</p> */}\n            \n          \t{this.state.date \n          \t  ? <p><b>Date:</b> {this.state.event.date.slice(0,10)}</p> \n          \t  : <p>  <b>Date :</b> TBD  </p> \n          \t}\n          </div>\n        </div>\n        \n        \n        <div className=\"detailsDescription\">\n          <p><b>What you'll do during this event:</b> </p>\n            <p>\n            <br />\n            \t{this.state.event.description}\n            </p>\n        </div>\n        \n        \n        {/* <p> googleLink: {this.state.event.googleLink}</p> */}\n          \n          <div className=\"detailsJoin\">\n          <h3>Want to join this event?</h3>\n            {/* {this.props.user && (this.state.attending \n              ? <p>You are attending this event! </p> \n              : <button onClick={this.joinEvent}> Join event</button>)} */}\n\n            {this.state.attending \n              ? <p>You are attending this event! \n                  <a href={this.state.event.googleLink}>\n                   Click here to go to your event\n                  </a> \n                </p> \n              : <Button onClick={this.joinEvent}> Join event</Button>\n            } \n          </div>\n          \n          <hr />\n          <div className=\"detailsAttendeesHeader\">\n          \t<h3>\n          \t  Meet your fellow Event attendees: \n          \t</h3>\n          </div>\n        <div className=\"detailsAttendees\">\n     \n          {this.state.event.attendees.map((attendee, index) => {\n            return (\n              <div>\n\n                <div className=\"detailsBox\">\n                  <p>\n                    {attendee.username}\n                  </p>\n  \n                  <img className=\"ProfilePhoto\" alt={attendee.username} \n                    style= { { borderRadius: \"50%\"} } \n                    // maxWidth:\" 120px\",\n                    src={attendee.profileImage}>\n                  </img>\n                </div>\n                \n\n              </div>\n            )\n          })}\n\n        </div>\n\n        <div className=\"detailsEventOwner\">\n          {this.props.user._id === this.state.event.owner && this.props.user._id\n            ? <div className=\"row\">\n              \n\n                <div className=\"detailsEventOwnerColLeft\">\n                    <h3>\n                      You are the host of this event!\n                    </h3>\n                    <br />  \n                    <h4>\n                      Need to change something? \n                    </h4>\n                    <p>\n                      Click here to display the edit form:  \n                    </p>  \n                    <Button onClick={this.toggleEditForm}>\n                      Show Edit Form\n                    </Button>\n\n                <div className=\"detailsEventOwnerDelete\">\n                  <Alert variant={'danger'}>\n                  <h4>Can't host the event any more? </h4>\n                    \n                    <Dropdown >\n                      <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\n                        Yes I'm sure I want to delete this event\n                      </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                         <Dropdown.Item onClick={()=>{this.deleteEvent()}} >\n                          <h1>\n                            Delete \n                          </h1>\n                          <p>\n                            Please note that this action CANNOT be undone! Please only click delete if you're 100% certain!\n                          </p>\n                         </Dropdown.Item> \n                        </Dropdown.Menu>\n                    </Dropdown>\n        \n                  </Alert>\n                 </div>\n\n                </div>\n              <div className=\"detailsEventOwnerEditAll\">\n                    <div className=\"detailsEventOwnerEditForm, detailsEventOwnerColRight\">\n                      {this.state.editForm && (\n                        <Editevent\n                          {...this.state}\n                          handleChange={this.handleChange}\n                          handleSubmit={this.handleSubmit}\n                        />\n                      )}\n                    </div>\n                  </div>\n            </div>\n          : <p></p>\n          }\n\n            {/* {this.state.editForm && (\n              <Editevent\n                {...this.state}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n              />\n            )} */}\n        </div> \n\n      </div>\n    )\n  }\n}\n\n//original version of owner buttons\n{/* <h1>Original Version!</h1>\n{this.props.user._id === this.state.event.owner \n  && <button variant='danger' onClick={()=>{this.deleteEvent()}}>\n    Delete event\n  </button>}\n\n}\n\n  \n{/* {this.props.user && (this.state.attending ? <p>You are attending this event! </p> : <button onClick={this.joinEvent}> Join event</button>)} */}\n// {this.props.user && (this.state.attending \n//   ? <p>You are attending this event! <a href={this.state.event.googleLink}>Click here to go to your event</a> </p> \n//   : <button onClick={this.joinEvent}> Join event</button>)\n// } \n","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/EventList.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/FilteredEvents.js",["94","95"],"import React, { Component } from 'react'\nimport EventList from './EventList';\nimport EventRow from './EventRow';\nimport Searchbar from './Searchbar';\nimport axios from 'axios'\nimport '../../events/Search/search.css'\n\n\nexport default class FilteredEvents extends Component {\n   \n  state = {\n    upcomingEvents: this.props.events,\n    filteredEvents: [], //tbd\n    search: '',\n  }\n\n//if props is filtered, then events display based off search results \n  filterEvents = event => {\n    this.setState ( { search:event.target.value}, () => {\n\n      const filtered = this.props.events.filter ( p => \n        p.description.toLowerCase().includes(this.state.search.toLowerCase() ) \n        || p.title.toLowerCase().includes(this.state.search.toLowerCase() ) \n        //check data? \n      );\n\n      this.setState({\n        filteredEvents: filtered\n      })  \n    })\n  }\n\n\n  render() {\n    // console.log(`props`, this.props)\n    // console.log(`at render`, this.state.upcomingEvents)\n    // const events = this.state.upcomingEvents\n\n    if ( this.state.search === '' )  {\n      // console.log (`does it work?`) \n      return (\n          <> \n           <div className=\"searchBar\">\n\n           {/* <h2>Find your next Emeet Event</h2> */}\n              <Searchbar \n                filter = {this.filterEvents}\n                search = {this.state.search}\n              />\n            </div>\n            <div class=\"searchResults\">\n              <p>\n                <EventList \n                  eventList = {this.props.events} \n                />\n            </p>\n            </div>\n          </>\n      )\n      } else {\n\n        return (\n          <div>\n          \n            <div className=\"searchBar\">\n            {/* <h2>Find your next Emeet Event</h2> */}\n              <Searchbar \n                filter = {this.filterEvents}\n                search = {this.state.search}\n              />\n            </div>\n\n            {/* <div>\n              <h2>FilteredEvents</h2>\n              <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Fugiat, culpa debitis officiis dignissimos commodi assumenda exercitationem totam! Accusamus repellat sed animi, deserunt veniam est cum, voluptas sint ex a dolorem.</p>\n            </div> */}\n\n            <div>\n              <EventList \n                eventList = {this.state.filteredEvents} \n              />\n            </div>\n          </div>\n        )\n    } //else statements \n  }\n}","/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/Searchbar.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/services/auth.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/components/events/Search/EventRow.js",[],"/Users/Iriel/Ironhack/Projects/project3/emeet/client/src/services/upload.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":37,"nodeType":"102","messageId":"103","endLine":4,"endColumn":50},{"ruleId":"100","severity":1,"message":"104","line":17,"column":9,"nodeType":"102","messageId":"103","endLine":17,"endColumn":14},{"ruleId":"100","severity":1,"message":"105","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"106","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":3,"column":24,"nodeType":"102","messageId":"103","endLine":3,"endColumn":29},{"ruleId":"100","severity":1,"message":"107","line":5,"column":24,"nodeType":"102","messageId":"103","endLine":5,"endColumn":29},{"ruleId":"100","severity":1,"message":"107","line":6,"column":24,"nodeType":"102","messageId":"103","endLine":6,"endColumn":29},{"ruleId":"100","severity":1,"message":"108","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":15},{"ruleId":"100","severity":1,"message":"107","line":7,"column":24,"nodeType":"102","messageId":"103","endLine":7,"endColumn":29},{"ruleId":"100","severity":1,"message":"109","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"110","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"111","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":14},{"ruleId":"100","severity":1,"message":"112","line":8,"column":31,"nodeType":"102","messageId":"103","endLine":8,"endColumn":40},{"ruleId":"113","severity":1,"message":"114","line":339,"column":1,"nodeType":"115","messageId":"116","endLine":348,"endColumn":148},{"ruleId":"100","severity":1,"message":"117","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":16},{"ruleId":"100","severity":1,"message":"118","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'EventList' is defined but never used.","'Searchbar' is defined but never used.","'Alert' is defined but never used.","'service' is defined but never used.","'Link' is defined but never used.","'Addevent' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'EventRow' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]