[{"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/index.js":"1","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/App.js":"2","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/Homepage.js":"3","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/auth/Login.js":"4","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/auth/Signup.js":"5","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Events.js":"6","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/user/UserProfile.js":"7","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/EventDetail.js":"8","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Addevent.js":"9","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/navbar/Navbar.js":"10","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Editevent.js":"11","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/FilteredEvents.js":"12","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/EventList.js":"13","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/Searchbar.js":"14","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/services/auth.js":"15","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/EventRow.js":"16"},{"size":1110,"mtime":1608134545343,"results":"17","hashOfConfig":"18"},{"size":4275,"mtime":1608134545339,"results":"19","hashOfConfig":"18"},{"size":2868,"mtime":1608134545339,"results":"20","hashOfConfig":"18"},{"size":2794,"mtime":1608139082202,"results":"21","hashOfConfig":"18"},{"size":4716,"mtime":1608139082202,"results":"22","hashOfConfig":"18"},{"size":2424,"mtime":1608134545343,"results":"23","hashOfConfig":"18"},{"size":2357,"mtime":1608134545343,"results":"24","hashOfConfig":"18"},{"size":6717,"mtime":1608134711277,"results":"25","hashOfConfig":"18"},{"size":7850,"mtime":1608139082202,"results":"26","hashOfConfig":"18"},{"size":1700,"mtime":1607960291905,"results":"27","hashOfConfig":"18"},{"size":5025,"mtime":1608141092115,"results":"28","hashOfConfig":"18"},{"size":2300,"mtime":1608134545343,"results":"29","hashOfConfig":"18"},{"size":1096,"mtime":1608134545343,"results":"30","hashOfConfig":"18"},{"size":958,"mtime":1608134545343,"results":"31","hashOfConfig":"18"},{"size":881,"mtime":1607960291905,"results":"32","hashOfConfig":"18"},{"size":1618,"mtime":1608134545343,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"18nxw3g",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/index.js",[],["75","76"],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/App.js",["77"],"// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport { Route , Switch , Redirect, BrowserRouter } from \"react-router-dom\"\n\n// import Index from './components/Index';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Navbar from './components/navbar/Navbar';\nimport Events from './components/events/Events';\nimport UserProfile from './components/user/UserProfile';\nimport Homepage from './components/Homepage';\nimport EventDetail from './components/events/EventDetail';\nimport Editevent from './components/events/Editevent';\nimport Addevent from './components/events/Addevent';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n\n  //auth added dec 11@11AM\n  state = {\n    user: this.props.user\n  }\n\n  setUser = user => {\n    this.setState({\n      user: user\n    })\n  }\n\n  //=========================\n\n  render() {\n    // console.log(`App.js user`, this.state.user)\n    return (\n      <div>\n        <Navbar user={this.state.user} setUser={this.setUser} />\n\n          <Switch>\n\n          {/* <Route exact path = \"/\" component = {Homepage } />\n          {/* <Route exact path = \"/signup\" component = { Signup } /> */}\n          {/* <Route exact path = \"/login\" component = { Login } /> */}\n          {/* <Route exact path = \"/events\" component = { Events } />\n          <Route exact path = \"/profile\" component = { UserProfile } /> */} \n          {/* <Route exact path = \"/events\" component = { Events } /> */}\n          {/* <Route exact path = \"/profile\" component = { UserProfile } /> */}\n          {/* <Route exact path = \"/editevent\" component = { Editevent }/> */}\n          {/* <Route exact path = \"/Addevent\" component = {Addevent} /> */}\n         \n          \n            <Route exact path = \"/\" \n              render= { props => {\n                  if (this.state.user) {\n                    return <Homepage \n                      user = {this.state.user}\n                      {...props}\n                    />\n                  }\n                  else {\n                    return <Homepage /> \n                    }\n                  // component = { UserProfile } /> // replaced by render\n                  }}\n            />\n            \n\n\n            <Route exact path = \"/signup\" \n              render = { props => \n               <Signup setUser={this.setUser} {...props} />}\n            />\n            <Route exact path = \"/login\" \n              render={ props => \n              <Login setUser={this.setUser} {...props}/>}\n                // component = { Login } /> //replaced by render\n                // render={props => <Login setUser={this.setUser} {...props} />}\n            />\n            <Route exact path = \"/events\" \n              render={(props) => \n              <Events setUser={this.setUser} {...props}/>}\n                // component = { Login } /> //replaced by render\n            />\n            \n            {/* <Route exact path = \"/events\" component = { Events } /> */}\n\n            <Route exact path = \"/profile\" \n              render= { props => {\n                  if (this.state.user) {\n                    return <UserProfile \n                      user = {this.state.user}\n                      {...props}\n                    />\n                  }\n                  else {return <Redirect to= '/' /> }\n                  // component = { UserProfile } /> // replaced by render\n                  }}\n            />\n\n            <Route exact path = \"/events/:id\" \n              render = { props => \n                <EventDetail\n               user={this.state.user} \n                {...props} \n                />}\n            />\n\n            <Route exact path = \"/editevent\" component = { Editevent }/>\n\n            <Route exact path = \"/addevent\" \n              // component = {Addevent} />\n              render= { props => {\n                  if (this.state.user) {\n                    return <Addevent \n                      user = {this.state.user}\n                      {...props}\n                    />\n                  \n                  }\n                  else {return <Redirect to= '/login' /> }\n              }}\n            /> \n\n\n          </Switch>\n\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n\n\n\n  \n","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/Homepage.js",["78","79","80"],"import React from 'react'\nimport {Link} from 'react-router-dom'\nimport Events from './events/Events'\nimport FilteredEvents from './events/Search/FilteredEvents'\nimport Searchbar from './events/Search/Searchbar'\n// import Navbar from './navbar/Navbar'\n// import App from '../App'; \nimport axios from 'axios'\nimport '../components/events/Search/search.css'\n\n\n\nexport default class Homepage extends React.Component {\n\n  state = {\n    user : this.props.user,\n    events: [],\n    title: '',\n    description: '',   \n    date: '',\n    startTime: \"\",\n    endTime: \"\",\n  }\n\n  componentDidMount() {\n    axios.get('/api/events') \n      .then( response => {\n        const event = response.data;\n        console.log( `api call`, response)\n        this.setState({\n          events : event,\n          //below is from an outdated version of search, can be ignored\n          title: response.data.title,\n          description: response.data.description,\n          image: response.data.image,\n        })\n      })\n  }\n\n  render() {\n// working, but removed for simplification of search\n    const user = this.state.user;\n    console.log(`this is the render declared user = ${user} `)\n  \n\n    if (!user) return ( \n      <div class=\"homepage\"> \n        index, now called homepage!\n        <p>\n          Welcome!\n        </p>\n\n        <p>\n          <a href=\"/events\">See all events</a>\n        </p>\n        <p>\n\n        <div class=\"searchFullContainer\">\n          <h1>search implementation</h1>\n          <p>\n            <FilteredEvents\n              events = {this.state.events}\n            />\n          </p>\n        </div>\n\n          {/* <button><a href=\"/signup\"> Signup</a></button> <button><a href=\"/login\"> Login</a></button> */}\n        </p>\n         \n      </div>\n    )\n\n   \n    return (\n      <div class=\"homepage\"> \n        index, now called homepage!\n        <p>\n          Welcome {this.state.user.username} !\n        </p>\n        \n        <div class=\"searchFullContainer\">\n          <h1>search implementation</h1>\n          <div class=\"searchResults\">\n\n            <FilteredEvents\n              events = {this.state.events}\n            />\n          </div>\n        </div>\n\n\n\n        \n  \n      </div>\n    )\n  }\n}\n\n\n//  {/* if (!this.state.user) \n//     console.log(`homepage userstate`,this.state.user)\n//     // console.log( `homepage props:`, this.state.user) */}\n\n\n// To use the axios call directly on page: \n// <p>\n// <a href=\"/events\">See all events</a>\n// </p>\n// <p>\n// <p>\n//   These events:\n//   {this.state.events.map ( (event, index) => {\n//   return ( \n//     <div key= {event._id}>\n//         <p>\n//             {event.title}\n//         </p>\n//         <Link to = {`/events/${event._id}`}  > See More Information </Link>\n        \n//     </div>\n//     )})}\n// </p>\n\n/* <button><a href=\"/signup\"> Signup</a></button> <button><a href=\"/login\"> Login</a></button> */\n// </p>","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/auth/Login.js",["81"],"// import { Alert } from 'bootstrap';\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { login } from '../../services/auth';\nimport './auth.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form, Button, Alert, Container } from 'react-bootstrap';\n\n\nexport default class Login extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    // console.log (`state before  `, this.state)\n\n    login ( username , password ).then ( data => {\n      console.log(`login data`, data)\n\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: ''\n        });\n\n      } else {\n        // successfully logged in\n        // update the state for the parent component\n        console.log(`before the setUser`)\n        console.log(this.props)\n        this.props.setUser(data);\n        console.log(`after the setUser`)\n        this.props.history.push('/');\n      }\n    });\n  };\n\n\n  render (){\n    return (\n      <div class=\"centerAuth\">\n\n        <Container>\n          <div class=\"boxOn\">\n            <div>\n              <h1>\n                Please log in\n              </h1>\n      \n          \n              <p className=\"error\">\n                {this.state.message}\n              </p>\n            </div>\n    \n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Label htmlFor='username'>Username: </Form.Label>\n                <Form.Control \n                  size=\"lg\"\n                  type = \"text\"\n                  name = \"username\"\n                  id = \"username\"\n                  value = {this.state.username}\n                  onChange = {this.handleChange}\n                />\n              </Form.Group>\n    \n              <Form.Group>\n                <Form.Label htmlFor=\"password\">Password </Form.Label>\n                    <Form.Control \n                        size=\"lg\"\n                        type = \"password\"\n                        name = \"password\"\n                        id = \"password\"\n                        value = {this.state.password}\n                        onChange = {this.handleChange}\n                    />  \n                </Form.Group>\n    \n                <Button variant=\"primary\" type='submit'>Login</Button>\n    \n            </Form>\n            <div className=\"signupLoginSwitch\">\n              Need to create an account?  <Link to = \"/signup\">Sign up</Link>\n            </div>\n            </div>\n        </Container>\n    \n      </div>\n    )\n  }\n}\n","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/auth/Signup.js",["82"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { signup } from '../../services/auth'\nimport './auth.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form, Button, Alert, Container } from 'react-bootstrap';\n\n\n// client/src/services/auth.js <--- relative path\n\nexport default class Signup extends Component {\n\n  //authentication - added dec 11 @ 11\n  state = {\n    username: '',\n    password: '',\n    profileImage: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password, profileImage } = this.state;\n\n    signup(username, password, profileImage).then ( data => {\n      // console.log(`data`, data)\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: '',\n          profileImage: ''\n        });\n      } else {\n        this.props.setUser(data);\n        this.props.history.push('/'); //was to projects, now to signup?\n      }\n    });\n  };\n\n\n  render() {\n    console.log(this.props)\n\n    return (\n      <div class=\"centerAuth\">\n\n        <Container>\n          <div className=\"boxOn\">\n\n            <div>\n              <h1>Create your account</h1>\n            \n              <p className=\"error\">\n                  {this.state.message}\n              </p>\n            </div>\n    \n    \n            <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n                <Form.Label  htmlFor=\"username\">Username </Form.Label>\n                  <Form.Control \n                        type = \"text\"\n                        name = \"username\"\n                        id = \"username\"\n                        value = {this.state.username}\n                        onChange = {this.handleChange}\n                    />\n              </Form.Group>\n    \n    \n              <Form.Group>\n                <Form.Group htmlFor=\"password\">Password </Form.Group>\n                  <Form.Control \n                        type = \"password\"\n                        name = \"password\"\n                        id = \"password\"\n                        value = {this.state.password}\n                        onChange = {this.handleChange}\n                    />  \n                </Form.Group>\n    \n                <Form.Group>\n                  <br />\n                <div className=\"profileImageUpload\">\n                  <Form.Label  htmlFor=\"profileImage\">Uplodad a Profile Picture? </Form.Label>\n              \n                      <div class=\"profileImageUploadContainer\">\n                        <Form.Control \n                            type = \"file\"\n                            name = \"profileImage\"\n                            id = \"profileImage\"\n                            value = {this.state.profileImage}\n                            onChange = {this.handleChange}\n                            class=\"profileImageUpload\"\n                        />  \n                      </div>\n                </div>\n\n                </Form.Group>          \n              \n              <Button type='submit' >\n                Sign up \n              </Button>\n            \n            </Form>\n              <div className=\"signupLoginSwitch\">\n                Already have an account <Link to = \"/login\">Login </Link>\n              </div>\n          </div>\n        </Container>\n      </div>\n    )\n  }\n}\n\n//form using bootstap\n// <Form.Group>\n\n//   <Form.Label htmlFor=\"username\">Username </Form.Label>\n//       <Form.Control \n//           type = \"text\"\n//           name = \"username\"\n//           id = \"username\"\n//           value = {this.state.username}\n//           onChange = {this.handleChange}\n//       />\n\n// </Form.Group>\n\n// <Form.Group>\n//   <p>\n//   <Form.Label htmlFor=\"password\">Password </Form.Label>\n//       <Form.Control \n//           type = \"password\"\n//           name = \"password\"\n//           id = \"password\"\n//           value = {this.state.password}\n//           onChange = {this.handleChange}\n//       />  \n//   </p>\n// </Form.Group>\n\n// <Form.Group>\n//   <p>\n//   <Form.Label htmlFor=\"profileImage\">Profile Picture </Form.Label>\n//       <Form.Control \n//           type = \"file\"\n//           name = \"profileImage\"\n//           id = \"profileImage\"\n//           value = {this.state.profileImage}\n//           onChange = {this.handleChange}\n//       />  \n//   </p>\n// </Form.Group>\n\n// {this.state.message && (\n//   <Alert variant='danger'>{this.state.message}</Alert>\n// )}\n\n// <Button type='submit' >\n//   Sign up \n// </Button>\n\n// {this.state.message && (\n//   <Alert variant='danger'>{this.state.message}</Alert>\n// )}","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Events.js",[],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/user/UserProfile.js",[],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/EventDetail.js",["83","84","85"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Addevent from './Addevent';\nimport Editevent from './Editevent';\n\nexport default class EventDetail extends Component {\n\n  state = {\n    error: null,\n    event: null,\n    title: '',\n    description: '',\n    // owner: { type: Schema.Types.ObjectId, ref: 'User'},\n    image: '',\n    googleLink: '',\n    // attendees: [{ type: Schema.Types.ObjectId, ref: 'Event' }],\n    date: '',\n    startTime: \"\",\n    endTime: \"\",\n    maxCapacity:\"\",\n    attending: false,\n  };\n\n  //user attend functionality start =============\n  // eventAttendHandleChange = event => {\n  //   console.log('button clicked')\n  //   const name = event.target.name;\n  //   const value = event.target.value;\n  //   this.setState({\n  //     [name]: value,\n  //     attending: !this.state.attending\n  //   });\n  // };\n\n  // eventAttendHandleSubmit = event => {\n  //   event.preventDefault();\n  //   console.log(`handlesubmit state,`, this.state); //doesn't display\n  //   console.log('button clicked, handlesubmit')\n\n  //   axios.post('/api/events', {\n  //     attendees: this.event.attendees.push(this.props.user._id)\n  //   })\n  //     .then(() => {\n  //       // set the form to it's initial state (empty input fields)\n  //       this.setState({\n  //         attending: !this.state.attending\n  //       })\n  //       // update the parent components state (in Projects) by calling getData()\n  //       this.props.getData();\n  //     })\n  //     .catch(err => console.log(err))\n\n  // }\n\n  // user attend functions end ================\n\n  getEventDetails = () => {\n    // console.log(`getEventDetails:`, this.props)\n    const eventId = this.props.match.params.id\n\n    axios.get(`/api/events/${eventId}`)\n        .then(response => {\n            const event = response.data;\n            // console.log(`axios call:`, event)\n            this.setState({\n              event : event,\n              title: response.data.title,\n              description: response.data.description,\n              image: response.data.image,\n              googleLink: response.data.googleLink,\n              date: response.data.date,\n              startTime: response.data.startTime,\n              endTime: response.data.endTime,\n              maxCapacity: response.data.maxCapacity,\n              attending: response.data.attendees.includes(this.props.user._id)\n            })\n          })\n          .catch(err => {\n            console.log(err.response)\n            if (err.response.status === 404) {\n              this.setState({\n                error: 'Sorry - Project Not found 🤷‍♀️ 🤷‍♂️'\n              })\n            }\n           \n          })\n         \n  }\n\n  componentDidMount() {\n    this.getEventDetails();\n\n  }\n\n  deleteEvent = () => {\n    // delete this project from the database\n    const id = this.props.match.params.id;\n    axios.delete(`/api/events/${id}`)\n      .then(() => {\n        // this is how you do a redirect with react router dom\n        this.props.history.push('/events');\n      })\n  }\n\n  toggleEditForm = () => {\n    this.setState((prevState) => ({\n      editForm: !prevState.editForm\n    }))\n    \n  \n    }\n\n\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n\n\n\n  componentDidUpdate(prevProps) {\n  //   console.log('current props:', this.props.match.params.id)\n  //   console.log('previous props:', prevProps.match.params.id)\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.getEventDetails();\n      // console.log(`compDU ${this.state.event}`)\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const id = this.props.match.params.id;\n    axios.put(`/api/events/${id}`, {\n      title: this.state.title,\n      description: this.state.description,\n      image: this.state.image,\n      googleLink: this.state.googleLink,\n      date: this.state.date,\n      startTime: this.state.startTime,\n      endTime: this.state.endTime,\n      maxCapacity: this.state.maxCapacity,\n\n    })\n      .then(response => {\n        this.setState({\n          event: response.data,\n          title: response.data.title,\n          description: response.data.description,\n          image: response.data.image,\n          googleLink: response.data.googleLink,\n          date: response.data.date,\n          maxCapacity:response.data.maxCapacity,\n          startTime: response.data.startTime,\n          endTime: response.data.endTime,\n          editForm: false\n        })\n        this.props.history.push(\"/events\");\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  joinEvent = () => {\n    const id = this.props.match.params.id;\n    axios.put(`/api/events/join/${id}`)\n    .then(response => {\n      console.log(response, \"response\");\n      this.setState({\n        attending: true\n      })\n    }).catch(err => console.log(err))\n  }\n\n\n  render() {\n    console.log( `render` , this.state.attending)\n    console.log(\"attending\", this.state.attending)\n    // console.log( `user?`, this.props.user._id)\n  //   if (this.state.error) return <h1>{this.state.error}</h1>\n     if (this.state.error) return <h1>{this.state.error}</h1>\n    if (!this.state.event) return <h1>Loading...</h1>\n    // console.log(`event details!`)\n    // this.getEventDetails();\n    // console.log(`render's this.state`, this.state)\n\n    return (\n      <div>\n      test!\n      test!\n        <h1>{this.state.event.title}</h1>\n        <p>{this.state.event.description}</p>\n        <p>Start {this.state.event.startTime+'0'}  End {this.state.event.endTime+'0'}</p>\n        <p>Date: {this.state.event.date}</p>\n        {/* <p>{this.state.event.attendees}</p> */}\n        {this.props.user._id === this.state.event.owner && <button variant='danger' onClick={()=>{this.deleteEvent()}}>Delete event</button>}\n        {this.props.user._id === this.state.event.owner && <button onClick={this.toggleEditForm}>Show Edit Form</button>}\n        {this.props.user && (this.state.attending ? <p>You are attending this event! </p> : <button onClick={this.joinEvent}> Join event</button>)}\n        {this.state.editForm && (\n          <Editevent\n            {...this.state}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\n//moved to new component dec 15, delete if working\n{/* <p>Interested? </p>\n <form  onSubmit={this.handleSubmit}>\n <label htmlFor=\"attend\">in attending the event?</label>\n  <input \n      type='button'\n      id='title'\n      name='title'\n      value= 'Click here to register for the event!'\n      onClick={this.eventAttendHandleChange}\n    />\n</form> */}","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Addevent.js",["86"],"import React, { Component } from 'react'\nimport axios from \"axios\";\nimport './eventLists.css'\nimport '../../components/auth/auth.css'\nimport { Form, Button, Alert, Container, Row, Col } from 'react-bootstrap';\n\n\n\n// userProfileData\nexport default class Addevent extends Component {\n  state = {\n    title: '',\n    date:'',\n    startTime: '',\n    endTime: '',\n    maxCapacity:'',\n    // attendees: '',\n    // owner: '',\n    description: '',\n    image:'',\n    googleLink:'',\n    message: ''\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target;\n    \n    console.log(value);\n    this.setState ({\n      [name]: value\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault ();\n      \n    const { title, date, startTime,endTime, description, image, googleLink} = this.state;\n    this.props.history.push(\"/events\");\n\n    console.log(this.state)\n  \n    // userProfileData(event).then (data => {\n    //   if (data.message) {\n    //     this.setState({\n    //       message: data.message,\n    //     })\n    //   }\n    // });\n\n    if (title.length <5 ) {\n        this.setState ({ \n        message: 'Please enter a longer title'\n      })\n    }\n  \n    axios.post(\"/api/events\", {    \n      title:title,\n      date:date,\n      startTime: startTime,\n      endTime:endTime,\n      owner: this.props.user._id,\n      description: description,\n      image:image,\n      googleLink: googleLink,}).then( (event) => {\n        console.log(event.data , \"fetch event\")\n        this.setState({\n          message:`Event created!`\n        })\n      }).catch( err => {\n        console.log(err);\n     })\n\n    // this.props.history.push(`/events/${this.props.events._id}`);\n      \n    \n  \n  }//handleSubmit end\n\n  // userProfileData (something).then (data => {\n  //   if (data.message) {\n  //     this.setState({\n  //       message: data.message,\n  //     });\n  \n\n  render() {\n    console.log(this.props)\n    console.log(`message`, this.state.message)\n    return (\n       <div class=\"centerAuth\">\n            \n            <Container>\n              <div class=\"boxOn\">\n                <h1>Create an Event</h1>\n                <p className=\"error\">\n                  Message: {this.state.message}\n                </p>\n    \n                <div> \n               \n                  <Form onSubmit={this.handleSubmit}> \n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"title\"> Event title: </Form.Label>\n                          <Form.Control \n                            type=\"text\" \n                            name=\"title\" \n                            id=\"title\" \n                            // placeholder=\"Event Title\"\n                            value={this.state.title} \n                            onChange={this.handleChange}\n                            // size=\"lg\"\n                          />\n                    </Form.Group>      \n\n                    <Form.Group as={Row}>\n                      <Form.Label htmlFor=\"date\">Event date:</Form.Label>\n                        <Form.Control \n                            type=\"date\" \n                            name=\"date\" \n                            id=\"date\" \n                            // placeholder=\"Date of event\"\n                            value={this.state.date}\n                            onChange={this.handleChange}\n                              \n                          />\n                    </Form.Group>\n\n                    <Row>\n                      <Col>\n                        <Form.Group as={Row}>\n                          <Form.Label htmlFor=\"startTime \"> Start time: </Form.Label>\n                            <Form.Control \n                              type= \"time\" \n                              name=\"startTime\" \n                              id=\"startTime\" \n                              value={this.state.startTime}  \n                              onChange={this.handleChange}\n                            />\n                        </Form.Group>\n    \n                      </Col>\n                      <Col></Col>\n                      <Col></Col>\n                      </Row>\n\n                      <Row>\n                      <Col>\n                        <Form.Group as={Row}>\n                            <Form.Label htmlFor=\"endTime\" > End time: </Form.Label>\n                            <Form.Control \n                              type=\"time\"\n                              name=\"endTime\"\n                              id=\"endTime\"\n                              value={this.state.endTime}\n                              onChange={this.handleChange}\n                              />\n                        </Form.Group>\n                      </Col>\n                      <Col></Col>\n                      <Col></Col>\n                    </Row>\n\n                    <Row>\n                      <Col>\n                      \t<Form.Group as={Row}>\n                      \t    <Form.Label htmlFor=\"maxCapacity\"> Maximum capacity: </Form.Label>\n                      \t      <Form.Control \n                      \t        type=\"number\"\n                      \t        name=\"maxCapacity\" \n                      \t        id=\"maxCapacity\"\n                      \t        value={this.state.maxCapacity}\n                      \t        onChange={this.handleChange}\n                      \t      />\n                      \t    </Form.Group>\n                      </Col>\n                      <Col></Col>\n                      <Col></Col>\n                    </Row>\n\n                        {/* <label htmlFor=\"owner\">Hosted by:  </label>\n                        <input \n                        type=\"text\" \n                        name=\"owner\" \n                        id=\"owner\"\n                        value={this.state.owner}\n                        onChange={this.handleChange}/>\n                        <br/> */}\n\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                          <Form.Control as=\"textarea\" rows={3}\n                            type=\"text\"\n                            height=\"20px\"\n                            name=\"description\"\n                            id=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                          />\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"googleLink\">Add Google link: </Form.Label>\n                          <Form.Control \n                            type=\"link\"\n                            name=\"googleLink\"\n                            id=\"googleLink\"\n                            value={this.state.googleLink}\n                            onChange={this.handleChange} \n                            />\n                    </Form.Group>\n\n                    <div className=\"profileImageUpload\">\n                      <Form.Group >\n                          <Form.Label hmtlFor=\"image\" >Upload an image: </Form.Label>\n                          <div class=\"profileImageUploadContainer\">\n                              <Form.Control \n                                type= \"file\"\n                                name=\"image\"\n                                id=\"image\"\n                                accept=\"image/*\"\n                                class=\"profileImageUpload\"\n                              />\n                            </div>\n                      </Form.Group>      \n                    </div>\n                          <br />\n                          <Button type='submit'> \n                            Add your event! \n                          </Button>\n                      \n                  </Form>\n                </div>\n              </div>\n            </Container>\n      </div>\n    );\n  }\n}\n    \n  \n\n\n\n\n\n","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/navbar/Navbar.js",[],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Editevent.js",["87"],"import React, { Component } from 'react'\nimport '../../components/auth/auth.css'\nimport { Form, Button, Alert, Container, Row, Col } from 'react-bootstrap';\n\nexport default class Editevent extends Component {\n  \n\n  render() {\n    return (\n      \n      <div class=\"centerAuth\">\n\n        <Container>\n        \n            <div class=\"boxOn\">\n              <h2> Edit your event </h2>\n\n              <Form onSubmit={this.props.handleSubmit}>\n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"title\"> Event title: </Form.Label>\n                  <Form.Control  \n                      type=\"text\" \n                      name=\"title\" \n                      id=\"title\" \n                    \n                      value={this.props.title} \n                      onChange={this.props.handleChange}  \n                    />\n                </Form.Group>\n\n \n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"date\">Event date:</Form.Label>\n                    <Form.Control \n                      type=\"date\" \n                      name=\"date\" \n                      id=\"date\" \n                      value={this.props.date}\n                      onChange={this.props.handleChange}\n                        \n                      />\n                </Form.Group>\n\n                <Row>\n                    <Col>\n                      <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"startTime \"> Start time: </Form.Label>\n                          <Form.Control \n                            type= \"time\" \n                            name=\"startTime\" \n                            id=\"startTime\" \n                            value={this.props.startTime}  \n                            onChange={this.props.handleChange}\n                          />\n                      </Form.Group>\n  \n                    </Col>\n                    <Col></Col>\n                    <Col></Col>\n                    </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"endTime\" > End time: </Form.Label>\n                        <Form.Control \n                          type=\"time\"\n                          name=\"endTime\"\n                          id=\"endTime\"\n                          value={this.props.endTime}\n                          onChange={this.props.handleChange}\n                          />\n                    </Form.Group>\n                  </Col>\n                  <Col></Col>\n                  <Col></Col>\n                </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Group as={Row}>\n                        <Form.Label htmlFor=\"maxCapacity\"> Maximum capacity: </Form.Label>\n                          <Form.Control \n                            type=\"number\"\n                            name=\"maxCapacity\" \n                            id=\"maxCapacity\"\n                            value={this.props.maxCapacity}\n                            onChange={this.props.handleChange}\n                          />\n                        </Form.Group>\n                  </Col>\n                  <Col></Col>\n                  <Col></Col>\n                </Row>\n\n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                    <Form.Control as=\"textarea\" rows={3}\n                      type=\"text\"\n                      height=\"20px\"\n                      name=\"description\"\n                      id=\"description\"\n                      value={this.props.description}\n                      onChange={this.props.handleChange}\n                    />\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Form.Label htmlFor=\"googleLink\">Add Google link: </Form.Label>\n                    <Form.Control \n                      type=\"link\"\n                      name=\"googleLink\"\n                      id=\"googleLink\"\n                      value={this.props.googleLink}\n                      onChange={this.props.handleChange}\n                      />\n                </Form.Group>\n\n                <div className=\"profileImageUpload\">\n                  <Form.Group >\n                      <Form.Label hmtlFor=\"image\" >Upload an image: </Form.Label>\n                        <div class=\"profileImageUploadContainer\">\n                            <Form.Control \n                              type= \"file\"\n                              name=\"image\"\n                              id=\"image\"\n                              accept=\"image/*\"\n                              class=\"profileImageUpload\"\n                            />\n                          </div>\n                  </Form.Group>      \n                </div>\n                  <br />\n                  <Button type='submit'> \n                    Edit your event \n                  </Button>\n                \n              </Form>\n            </div>\n        </Container>\n      </div>\n    );\n  }\n}\n    \n  \n\n\n\n\n","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/FilteredEvents.js",["88","89"],"import React, { Component } from 'react'\nimport EventList from './EventList';\nimport EventRow from './EventRow';\nimport Searchbar from './Searchbar';\nimport axios from 'axios'\nimport '../../events/Search/search.css'\n\n\nexport default class FilteredEvents extends Component {\n   \n  state = {\n    upcomingEvents: this.props.events,\n    filteredEvents: [], //tbd\n    search: '',\n  }\n\n//if props is filtered, then events display based off search results \n  filterEvents = event => {\n    this.setState ( { search:event.target.value}, () => {\n\n      const filtered = this.props.events.filter ( p => \n        p.description.toLowerCase().includes(this.state.search.toLowerCase() ) \n        || p.title.toLowerCase().includes(this.state.search.toLowerCase() ) \n        //check data? \n      );\n\n      this.setState({\n        filteredEvents: filtered\n      })  \n    })\n  }\n\n\n  render() {\n    // console.log(`props`, this.props)\n    // console.log(`at render`, this.state.upcomingEvents)\n    // const events = this.state.upcomingEvents\n\n    if ( this.state.search === '' )  {\n      // console.log (`does it work?`) \n      return (\n          <> \n           <div class=\"searchBar\">\n              <Searchbar \n                filter = {this.filterEvents}\n                search = {this.state.search}\n              />\n            </div>\n            <div class=\"searchResults\">\n              <p>\n                <EventList \n                  eventList = {this.props.events} \n                />\n            </p>\n            </div>\n          </>\n      )\n      } else {\n\n        return (\n          <div>\n          \n            <div class=\"searchBar\">\n              <Searchbar \n                filter = {this.filterEvents}\n                search = {this.state.search}\n              />\n            </div>\n\n            {/* <div>\n              <h2>FilteredEvents</h2>\n              <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Fugiat, culpa debitis officiis dignissimos commodi assumenda exercitationem totam! Accusamus repellat sed animi, deserunt veniam est cum, voluptas sint ex a dolorem.</p>\n            </div> */}\n\n            <p>\n              <EventList \n                eventList = {this.state.filteredEvents} \n              />\n            </p>\n          </div>\n        )\n    } //else statements \n  }\n}","/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/EventList.js",[],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/Searchbar.js",[],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/services/auth.js",[],"/home/kara/Documents/Ironhack/week8-project3/emeet/client/src/components/events/Search/EventRow.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":37,"nodeType":"96","messageId":"97","endLine":4,"endColumn":50},{"ruleId":"94","severity":1,"message":"98","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"100","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":17},{"ruleId":"94","severity":1,"message":"101","line":7,"column":24,"nodeType":"96","messageId":"97","endLine":7,"endColumn":29},{"ruleId":"94","severity":1,"message":"101","line":6,"column":24,"nodeType":"96","messageId":"97","endLine":6,"endColumn":29},{"ruleId":"94","severity":1,"message":"98","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"102","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":217,"column":1,"nodeType":"105","messageId":"106","endLine":227,"endColumn":12},{"ruleId":"94","severity":1,"message":"101","line":5,"column":24,"nodeType":"96","messageId":"97","endLine":5,"endColumn":29},{"ruleId":"94","severity":1,"message":"101","line":3,"column":24,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"94","severity":1,"message":"107","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":16},{"ruleId":"94","severity":1,"message":"108","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":13},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Events' is defined but never used.","'Searchbar' is defined but never used.","'Alert' is defined but never used.","'Addevent' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'EventRow' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]